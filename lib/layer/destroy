#!/bin/bash
#
# tupper - A container image manager
#
# Copyright (c) 2018 Matt Ferris <matt@bueller.ca>
# Licensed under BSD 2-clause license
# github.com/mattferris/tupper/blob/master/License.txt
#

set -e

if ! [[ -f "$TUP_LIB_DIR/includes/common.inc" ]]; then
    echo "error: can't locate common.inc" >&2
    exit 1
fi

. "$TUP_LIB_DIR/includes/common.inc"

trap tup_error ERR


#
# print usage
#
_usage() {
    cat <<EOF

usage: $TUP_FRONT_CMD $(basename $0) <ref> [ --help ]

Destroy a layer.

Arguments:

    ref     The layer to destory

    --help  Print usage information

EOF
    exit 1
}


#
# parse args
#

tup_getopt_required=(1)
tup_getopt_optional=(help)
while tup_getopt; do
    case $tup_getopt_name in
        1) ref=$tup_getopt_value ;;
        help) _usage ;;
    esac
done

# handle getopt errors
tup_error_getopt

# check for missing required args
if [[ ${#tup_getopt_required[@]} -ge 1 ]]; then
    _usage
fi


#
# main
#

if ! layerid=$(tup refparse --layer "$ref"); then
    echo "error: layerid doesn't exist: $ref" >&2
    exit 2
fi

if ! (rm -r "$TUP_STORAGE_DIR/layers/$(tup_path $layerid)"); then
    echo "error: failed to destroy layer: $layerid" >&2
    exit 3
fi

if [[ -t 1 ]]; then
    echo -n "destroyed layer "
fi

echo $layerid

exit 0
