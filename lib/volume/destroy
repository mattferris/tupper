#!/bin/bash
#
# tupper - A container image manager
#
# Copyright (c) 2018 Matt Ferris <matt@bueller.ca>
# Licensed under BSD 2-clause license
# github.com/mattferris/tupper/blob/master/License.txt
#

set -e

if ! [[ -f "$TUP_LIB_DIR/includes/common.inc" ]]; then
    echo "error: can't locate common.inc" >&2
    exit 1
fi

. "$TUP_LIB_DIR/includes/common.inc"

trap tup_error ERR


#
# print usage
#
_usage() {
    cat <<EOF

usage: $TUP_FRONT_CMD $(basename $0) <ref> [ --help ]

Destroy a volume.

Arguments:

    ref     The volume to destory

    --help  Print usage information

EOF
    exit 1
}


#
# parse args
#

tup_getopt_required=(1)
tup_getopt_optional=(help)
while tup_getopt; do
    case $tup_getopt_name in
        1) ref=$tup_getopt_value ;;
        help) _usage ;;
    esac
done

# handle getopt errors
tup_error_getopt

# check for missing required args
if [[ ${#tup_getopt_required[@]} -ge 1 ]]; then
    _usage
fi


#
# main
#

if ! volumeid=$(tup refparse --volume "$ref"); then
    tup_error 2 "volume doesn't exist: $volumeid"
fi

format=$(tup_conf get volume $volumeid format)
path="$TUP_STORAGE_DIR/volumes/$(tup_path "$volumeid")/mount"
case $format in

    empty)
        ;;
 
    overlayfs)
        msg=$(umount "$path" 2>&1 >/dev/null) || \
        case $? in
            0) ;;
            32) tup_debug 2 "overlayfs volume not mounted: $volumeid" ;;
            *) tup_error 3 "failed to unmount overlayfs: ($code) $path" ;;
        esac
        ;;

    plain)
        ;;

    squashfs)
        msg=$(umount "$path" 2>&1 >/dev/null) || \
        case $? in
            0) ;;
            32) tup_debug 2 "squashfs volume not mounted: $volumeid" ;;
            *) tup_error 3 "failed to unmount squashfs: ($code) $path" ;;
        esac
        ;;

    tgz)
        ;;

    *)
        tup_error 2 "unknown format specified: $format"
        ;;

esac

if ! (rm -r "$(dirname "$path")"); then
    tup_error 3 "failed to remove volume directory: $path"
fi

if [[ -t 1 ]]; then
    echo -n "destroyed volume "
fi

echo $volumeid

exit 0
