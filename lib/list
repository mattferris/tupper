#!/bin/bash
#
# tupper - A container image manager
#
# Copyright (c) 2018 Matt Ferris <matt@bueller.ca>
# Licensed under BSD 2-clause license
# github.com/mattferris/tupper/blob/master/License.txt
#

set -e

if ! [[ -f "$TUP_LIB_DIR/includes/common.inc" ]]; then
    echo "error: can't locate common.inc" >&2
    exit 1
fi

. "$TUP_LIB_DIR/includes/common.inc"

trap tup_error ERR


#
# print usage
#
_usage() {
    cat <<EOF

usage: tup layer list [ --with-label <label> ] [ --date ] [ --detail ] [ --format ] [ --help ] [ --id-only ] [ --labels ] [ --long-id ] [ --type <type> ]

List objects. If --label is specified, list objects labelled with <label>.

Arguments:

    General options:

        --help  Print usage information
        --type  The type of object to list: container, image, layer, or volume

    Filter options:

        --with-label  List objects labelled with <label>

    Display options:

        --date       Show creation date and time
        --detail     Implies --date and --labels
        --format     Show layer format
        --id-only    Only dislay object IDs (implies --long)
        --labels     Show object labels
        --long-id    Show full object IDs instead of partials ones

EOF
    exit 1
}


#
# parse args
#

tup_getopt_required=(type:)
tup_getopt_optional=(date detail format help id-only labels long-id with-label:)
while tup_getopt; do
    case $tup_getopt_name in
        date) opt_date=1 ;;
        detail) opt_date=1; opt_format=1; opt_labels=1 ;;
        format) opt_format=1 ;;
        help) _usage ;;
        id-only) opt_id_only=1 ;;
        labels) opt_labels=1 ;;
        long-id) opt_long_id=1 ;;
        type)
            case $tup_getopt_value in
                container) ;;
                image) ;;
                layer) ;;
                volume) ;;
                *) tup_error 1 "invalid type specified: $tup_getopt_value" ;;
            esac
            opt_type=$tup_getopt_value
            ;;
        with-label) opt_with_label=$tup_getopt_value ;;
    esac
done

# handle option errors
tup_error_getopt

# check for missing required options
if [[ ${#tup_getopt_required[@]} -ge 1 ]]; then
    _usage
fi


#
# main
#

objdir="$TUP_STORAGE_DIR/${opt_type}s"

if ! objects=$(find "$objdir" -mindepth 2 -maxdepth 2 -exec basename '{}' \;); then
    tup_error 4 "find failed in $objdir"
fi

for i in $objects; do
    if [[ ! -z "$opt_long_id" ]]; then
        echo -n $i
    else
        echo -n ${i:0:12}
    fi

    if [[ ! -z "$opt_id_only" ]]; then
        continue
    fi

    if [[ ! -z "$opt_date" ]]; then
        echo -n "  $(tup_conf get layer $i date)"
    fi

    if [[ ! -z "$opt_format" ]]; then
        echo -n "  $(tup_conf get layer $i format)"
    fi

    if [[ ! -z "$opt_labels" ]]; then
        echo -n "  ($(tup_conf get layer $i labels))"
    fi

    echo
done

exit 0
