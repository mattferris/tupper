#!/bin/bash
#
# tupper - A container image manager
#
# Copyright (c) 2018 Matt Ferris <matt@bueller.ca>
# Licensed under BSD 2-clause license
# github.com/mattferris/tupper/blob/master/License.txt
#

set -e

if ! [[ -f "$TUP_LIB_DIR/includes/common.inc" ]]; then
    echo "error: can't locate common.inc" >&2
    exit 1
fi

. "$TUP_LIB_DIR/includes/common.inc"

trap tup_error ERR


#
# print usage
#
_usage() {
    cat <<EOF

usage: $TUP_FRONT_CMD $(basename $0) <ref> [ --container | --image | --layer | --volume ] [ --help ]

Show object details.

Arguments:

    ref     The object ID to show

    --container  <ref> refers to a container ID
    --image      <ref> refers to an image ID
    --layer      <ref> refers to a layer ID
    --volume     <ref> refers to a volume ID

    --help  Print usage information

EOF
    exit 1
}


#
# parse args
#

opt_type="container"

tup_getopt_required=(1)
tup_getopt_optional=(container image layer volume help)
while tup_getopt; do
    case $tup_getopt_name in
        1) ref=$tup_getopt_value ;;
        container) opt_type="container" ;;
        help) _usage ;;
        image) opt_type="image" ;;
        layer) opt_type="layer" ;;
        volume) opt_type="volume" ;;
    esac
done

# handle getopt errors
tup_error_getopt

# check for missing required options
if [[ ${#tup_getopt_required[@]} -ge 1 ]]; then
    _usage
fi


#
# prerequisites
#

# resolve object ID
if ! objid=$(tup refparse --$opt_type "$ref"); then
    echo "error: $opt_type doesn't exist: $ref" >&2
    exit 2
fi


#
# main
#

tup_conf show $opt_type $objid

exit 0
