#!/bin/bash
#
# tupper - A container image manager
#
# Copyright (c) 2018 Matt Ferris <matt@bueller.ca>
# Licensed under BSD 2-clause license
# github.com/mattferris/tupper/blob/master/License.txt
#

set -e

if ! [[ -f "$TUP_LIB_DIR/includes/common.inc" ]]; then
    echo "error: can't locate common.inc" >&2
    exit 1
fi

. "$TUP_LIB_DIR/includes/common.inc"

trap tup_error ERR


#
# print usage
#
_usage() {
    cat <<EOF >&2

usage: $TUP_FRONT_CMD $(basename $0) <ref> [ --help ] [ --type <type> ]

Show object details.

Arguments:

    --help  Print usage information
    --type  The type of object to list: container, image, layer, or volume

EOF
    exit 1
}


#
# parse args
#

tup_getopt_required=(1)
tup_getopt_optional=(help type:)
while tup_getopt; do
    case
        1) ref=$tup_getopt_value ;;
        help) _usage ;;
        type)
            case $tup_getopt_value in
                container) ;;
                image) ;;
                layer) ;;
                volume) ;;
                *) typ_error 1 "invalid type specified: $tup_getopt_value" ;;
            esac
            opt_type=$tup_getopt_value
            ;;
    esac
done

# handle getopt errors
tup_error_getopt

# check for missing required options
if [[ ${#tup_getopt_required[@]} -ge 1 ]]; then
    _usage
fi


#
# prerequisites
#

# resolve object ID
if ! objid=$(tup refparse "$ref" --type $tuparg_type); then
    echo "error: $type doesn't exist: $ref" >&2
    exit 2
fi


#
# main
#

tup_conf show $opt_type $objid

exit 0
