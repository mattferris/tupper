#!/bin/bash
#
# tupper - A container image manager
#
# Copyright (c) 2018 Matt Ferris <matt@bueller.ca>
# Licensed under BSD 2-clause license
# github.com/mattferris/tupper/blob/master/License.txt
#

set -e

name=$1
target=$2

if [[ -z "$target" ]]; then
    echo "usage: $TUP_FRONT_CMD $(basename $0) { <name> | <name>:<ancestor> } <target>" >&2
    exit 1
fi

target=$(realpath $target)

stop=""
stopref=""
if [[ "$( echo "$name" | grep : )" = "$name" ]]; then
    stop=$( echo $name | cut -d: -f2 )
    name=$( echo $name | cut -d: -f1 )

    if [[ ! -z "$stop" ]]; then
        stopref=$("$TUP_BINDIR/refparse" "$stop")

        if [[ -z "$stopref" ]]; then
            echo "error: ancestor doesn't exist: $stop"
            exit 1
        fi
    else
        echo "error: empty ancestor"
        exit 1
    fi
fi

#
# resolve the chain of the container's union filesystem layers
#
_reslayer() {
    ref=$1
    chain=$2

    cd "$TUP_OBJDIR/layers/$ref"

    if [[ ! -f "fs" ]]; then
        echo "error: layer object doesn't contain a filesystem reference: $ref" >&2
    fi

    obj=$(cat fs)

    if [[ ! -d "$TUP_OBJDIR/layers/$obj" ]]; then
        echo "error: layer object doesn't exist: $ref -> $obj" >&2
        exit 1
    fi

    if [[ ! -z "$chain" ]]; then
        chain="$chain:"
    fi

    chain="${chain}$TUP_OBJDIR/layers/${obj}=RO"

    if [[ ! -f "parent" ]]; then
        # if a stop was supplied, but wasn't encountered by the oldest ancestor, error out
        if [[ ! -z "$stopref" && ! "$ref" = "$stopref" ]]; then
            echo "error: object '$stop' doesn't appear to be an ancestor of '$name'" >&2
            exit 1
        fi

        echo $chain
        return 0
    fi

    if [[ ! -z "$stopref" && "$ref" = "$stopref" ]]; then
        echo $chain
        return 0
    fi

    parent=$("$TUP_BINDIR/refparse" "$(cat parent)")

    if [[ ! -d "$TUP_OBJDIR/layers/$parent" ]]; then
        echo "error: undefined parent '$parent' for container '$ref'" >&2
        exit 1
    fi

    _reslayer $parent $chain
}

layers=""

if [[ -d "$TUP_IMGDIR/$name" ]]; then
    if [[ -d "$TUP_IMGDIR/$name/fs" ]]; then
        layers="$TUP_IMGDIR/$name/fs=RW"
    fi

    if [[ -f "$TUP_IMGDIR/$name/obj" ]]; then
        obj=$("$TUP_BINDIR/refparse" "$(cat "$TUP_IMGDIR/$name/obj")")
    fi
else
    obj=$("$TUP_BINDIR/refparse" "$name")
fi

if [[ ! -z "$layers" ]]; then
    layers="$layers:"
fi

layers="${layers}$(_reslayer $obj)"

if ! ( unionfs -o cow,allow_other $layers $target ); then
    echo "error: failed to prepare filesystem" >&2
    exit 1
fi
