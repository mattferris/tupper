#!/bin/bash
#
# tupper - A container image manager
#
# Copyright (c) 2018 Matt Ferris <matt@bueller.ca>
# Licensed under BSD 2-clause license
# github.com/mattferris/tupper/blob/master/License.txt
#

ref=$1

if [[ -z "$ref" ]]; then
    echo "usage: $TUP_FRONT_CMD $(basename $0) <ref>" >&2
    exit 1
fi

echo "verifying $ref" >&2

if [[ -d "$TUP_IMGDIR/$ref" ]]; then
    if [[ ! -f "$TUP_IMGDIR/$ref/obj" ]]; then
        echo "error: image doesn't reference a layer object: $ref" >&2
        exit 1
    fi
    ref=$(cat "$TUP_IMGDIR/$ref/obj")
fi

ref=$("$TUP_BINDIR/refparse" "$ref")

#
# resolve the chain of parents
#
_resparent() {
    ref=$1

    if [[ ! -d "$TUP_OBJDIR/layers/$ref" ]]; then
        echo "error: layer object doesn't exist: $ref" >&2
        exit 1
    fi

    cd "$TUP_OBJDIR/layers/$ref"

    parent=""
    if [[ -f "parent" ]]; then
        parent=$("$TUP_BINDIR/refparse" "$(cat parent)")

        if [[ ! -d "$TUP_OBJDIR/layers/$parent" ]]; then
            echo "error: undefined parent $parent for layer object $ref" >&2
            exit 1
        fi

        if ! ( _resparent "$parent" 2>/dev/null ); then
            echo "layer $ref failed (parent)"
            return 1
        fi
    fi

    if [[ ! -f "$TUP_OBJDIR/layers/$ref/fs" ]]; then
        echo "error: layer object with missing filesystem: $ref" >&2
        exit 1
    fi

    echo -n "layer $ref "

    fs=$(cat "$TUP_OBJDIR/layers/$ref/fs")
    fssum=$( cd "$TUP_OBJDIR/layers/$fs"; tar c * | sha1sum | cut -d\  -f1 )

    if [[ ! "$fs" = "$fssum" ]]; then
        echo "failed (filesystem)"
        return 1
    fi

    refsum=$( echo "$fssum $parent" | sha1sum | cut -d\  -f1 )

    if [[ ! "$ref" = "$refsum" ]]; then
        echo "failed (meta)"
        return 1
    fi

    echo "ok"
    return 0
}

if ( _resparent $ref ); then
    echo "verification successful" >&2
else
    echo "verification failed" >&2
    exit 1
fi


