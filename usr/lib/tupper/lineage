#!/bin/bash
#
# tupper - A container image manager
#
# Copyright (c) 2018 Matt Ferris <matt@bueller.ca>
# Licensed under BSD 2-clause license
# github.com/mattferris/tupper/blob/master/License.txt
#

ref=$1

if [[ -z "$ref" ]]; then
    echo "usage: $TUP_FRONT_CMD $(basename $0) <ref>" >&2
    exit 1
fi

if [[ -d "$TUP_IMGDIR/$ref" ]]; then
    echo $ref
    if [ ! -f "$TUP_IMGDIR/$ref/obj" ]; then
        echo "error: image doesn't reference a layer object: $ref" >&2
        exit 1
    fi
    ref=$(cat "$TUP_IMGDIR/$ref/obj")
fi

ref=$("$TUP_BINDIR/refparse" "$ref")

if [[ -z "$ref" ]]; then
    echo "error: nonexistent ref specified" >&2
    exit 1
fi

#
# resolve the chain of parents
#
_resparent() {
    ref=$1

    if [[ ! -d "$TUP_OBJDIR/layers/$ref" ]]; then
        echo "error: layer object doesn't exist: $ref" >&2
        exit 1
    fi

    cd "$TUP_OBJDIR/layers/$ref"

    echo "$ref <$(cat "$TUP_OBJDIR/layers/$ref/author")> $(cat "$TUP_OBJDIR/layers/$ref/msg")"

    if [[ ! -f "parent" ]]; then
        return 0
    fi

    parent=$("$TUP_BINDIR/refparse" "$(cat parent)")

    if [[ ! -d "$TUP_OBJDIR/layers/$parent" ]]; then
        echo "error: undefined parent $parent for layer object $ref" >&2
        exit 1
    fi

    _resparent $parent
}

_resparent $ref
