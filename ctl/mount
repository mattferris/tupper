#!/bin/bash
#
# tupper - A container image manager
#
# Copyright (c) 2018 Matt Ferris <matt@bueller.ca>
# Licensed under BSD 2-clause license
# github.com/mattferris/tupper/blob/master/License.txt
#

set -e

name=$1
target=$2

if [ -z "$target" ]; then
    echo "usage: $(basename $0) { <name> | <name>:<ancestor> } <target>" >&2
    exit 1
fi

base="/root/containers"
target=$(realpath $target)

stop=""
stopref=""
if [ "$( echo "$name" | grep : )" = "$name" ]; then
    stop=$( echo $name | cut -d: -f2 )
    name=$( echo $name | cut -d: -f1 )

    if [ ! -z "$stop" ]; then
        stopref=$("$base/ctl/refparse" "$stop")

        if [ -z "$stopref" ]; then
            echo "error: ancestor doesn't exist: $stop"
            exit 1
        fi
    else
        echo "error: empty ancestor"
        exit 1
    fi
fi

#
# resolve the chain of the container's union filesystem layers
#
_reslayer() {
    ref=$1
    chain=$2

    cd "$base/obj/$ref"

    if [ ! -f "fs" ]; then
        echo "error: layer object doesn't contain a filesystem reference: $ref" >&2
    fi

    obj=$(cat fs)

    if [ ! -d "$base/obj/$obj" ]; then
        echo "error: layer object doesn't exist: $ref -> $obj" >&2
        exit 1
    fi

    if [ ! -z "$chain" ]; then
        chain="$chain:"
    fi

    chain="${chain}$base/obj/${obj}=RO"

    if [ ! -f "parent" ]; then
        # if a stop was supplied, but wasn't encountered by the oldest ancestor, error out
        if [ ! -z "$stopref" -a ! "$ref" = "$stopref" ]; then
            echo "error: object '$stop' doesn't appear to be an ancestor of '$name'" >&2
            exit 1
        fi

        echo $chain
        return 0
    fi

    if [ ! -z "$stopref" -a "$ref" = "$stopref" ]; then
        echo $chain
        return 0
    fi

    parent=$("$base/ctl/refparse" "$(cat parent)")

    if [ ! -d "$base/obj/$parent" ]; then
        echo "error: undefined parent '$parent' for container '$ref'" >&2
        exit 1
    fi

    _reslayer $parent $chain
}

layers=""

if [ -d "$base/img/$name" ]; then
    if [ -d "$base/img/$name/fs" ]; then
        layers="$base/img/$name/fs=RW"
    fi

    if [ -f "$base/img/$name/obj" ]; then
        obj=$("$base/ctl/refparse" "$(cat "$base/img/$name/obj")")
    fi
else
    obj=$("$base/ctl/refparse" "$name")
fi

if [ ! -z "$layers" ]; then
    layers="$layers:"
fi

layers="${layers}$(_reslayer $obj)"

if ! ( unionfs -o cow,allow_other $layers $target ); then
    echo "error: failed to prepare filesystem" >&2
    exit 1
fi
